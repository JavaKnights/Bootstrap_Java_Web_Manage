<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd"
	default-lazy-init="true">

	<!-- 加载配置文件 -->
	<bean id="propertyConfigurer"
       class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
       <property name="locations">
           <list>
              <value>classpath:properties/*.properties</value>
           </list>
       </property>
    </bean>
	<context:property-placeholder />
	
	<!-- Kaptcha验证码验证 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">  
        <property name="config">  
            <bean class="com.google.code.kaptcha.util.Config">  
                <constructor-arg>  
                    <props>  
                        <prop key="kaptcha.border">${kaptcha.border}</prop>  
                        <prop key="kaptcha.border.color">${kaptcha.border.color}</prop>  
                        <prop key="kaptcha.border.thickness">${kaptcha.border.thickness}</prop>
                        <prop key="kaptcha.textproducer.char.string">${kaptcha.textproducer.char.string}</prop>
                        <prop key="kaptcha.textproducer.char.length">${kaptcha.textproducer.char.length}</prop>
                        <prop key="kaptcha.textproducer.font.names">${kaptcha.textproducer.font.names}</prop>
                        <prop key="kaptcha.textproducer.font.size">${kaptcha.textproducer.font.size}</prop>  
                        <prop key="kaptcha.textproducer.font.color">${kaptcha.textproducer.font.color}</prop>  
                        <prop key="kaptcha.textproducer.char.space">${kaptcha.textproducer.char.space}</prop>  
                        <prop key="kaptcha.noise.color">${kaptcha.noise.color}</prop>
	                    <prop key="kaptcha.background.clear.from">${kaptcha.background.clear.from}</prop>   
                    	<prop key="kaptcha.background.clear.to">${kaptcha.background.clear.to}</prop> 
                    	<prop key="kaptcha.image.width">${kaptcha.image.width}</prop>  
                        <prop key="kaptcha.image.height">${kaptcha.image.height}</prop>
                        <prop key="kaptcha.session.key">code</prop>
                    </props>  
                </constructor-arg>  
            </bean>  
        </property>  
    </bean>  
	
	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:component-scan base-package="com.xiuxinger.origin" />

	<import resource="classpath:dubbo/dubbo-connection.xml"/>
	 
</beans>